Protobuf is a Common Lisp implementation of Google's protocol buffers.

The protobuf repository contains a compiler from .proto files to Lisp and the
runtime support needed by the generated Lisp code.  Not all protocol buffer
features are implemented, but the code works well enough that serialization
tests pass.

The protobuf code has been tested with ABCL, CCL, CLISP, Lispworks, and SBCL.
In the past it has also worked with Allegro Common Lisp, but I have not tested
it recently.


INSTALLATION
============

1. The Common Lisp protocol buffer compiler is implemented as a plugin to
Google's protocol buffer compiler, so you must first install Google's
compiler, which is called protoc.  The required code and documentation are
available here:

    https://github.com/google/protobuf

The command should be something like:
    emerge dev-libs/protobuf

2. Clone the Lisp protobuf git repository to quicklisp's local-projects directory and compile protoc-gen-lisp, the Common Lisp protocol buffer plugin.  The steps required
for Linux are:
    cd ~/.quicklisp/local-projects

    git clone git://github.com/brown/protobuf.git

    make -C protobuf/protoc/lisp

    add the protobuf/protoc/lisp to PATH or copy the protoc-gen-lisp to PATH

3. Compile and load all the protobuf code:

    (asdf:load-system 'protobuf)


4. Optionally, load and run all the tests:

    (asdf:test-system 'varint)
    (asdf:test-system 'protobuf)


5. Compile and run the example code, which shows how to incorporate protocol
buffer definition files into your own projects:

    (asdf:load-system 'protobuf-example)

    (in-package address-book)
    (add-person :id 100
                :name "Robert Brown"
                :email-address "brown@foo.com"
                :phone-numbers '((home . "718-555-1212")
                                 (work . "212-589-1212")
                                 (mobile . "917-555-1212")))
    (list-people)

